#ifndef __MODULE_GPS_DATA_FIX__
#define __MODULE_GPS_DATA_FIX__


//////////////////////////////
//
// a.k.a. General satellite information
//
class gps_data_fix : public gps_data
 {
 public:
  
  struct timeval when;
  std::pair<float,char> latitude,longitude;
  int fix_quality;
  int nb_satellites_tracked;
  float horizontal_dilution_of_precision,
        altitude,
        geoid_altitude;


  gps_data_fix(const std::string & sentence)
   {
    std::vector<std::string> pieces;
    boost::algorithm::split(pieces,sentence,boost::algorithm::is_any_of(",*"));
    
    // patch date+time with UTC "today" date.
    when=gps::gps_time(gps::gps_utc_date_s(utils::ts::now()),pieces[1]);

    latitude=std::pair<float,char>(std::stof(pieces[2]),pieces[3][0]);
    longitude=std::pair<float,char>(std::stof(pieces[4]),pieces[5][0]);
    fix_quality=std::stoi(pieces[6]);
    nb_satellites_tracked=utils::convert::with_default<int>(pieces[7],0);
    horizontal_dilution_of_precision=utils::convert::with_default<float>(pieces[8],0);
    altitude=utils::convert::with_default<float>(pieces[9],0);
    geoid_altitude=utils::convert::with_default<float>(pieces[11],0);

   }

  virtual ~gps_data_fix() {}
 };

#endif
 // __MODULE_GPS_DATA_FIX__
